$date
	Fri Oct  9 14:07:14 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module MIPS_pipelined_tb $end
$var wire 32 ! write_data_out [31:0] $end
$var wire 1 " stall_out $end
$var wire 32 # read_data_2_out [31:0] $end
$var wire 32 $ read_data_1_out [31:0] $end
$var wire 1 % Zero_out $end
$var wire 1 & RegWrite_out $end
$var wire 10 ' PC [9:0] $end
$var wire 1 ( MemWrite_out $end
$var wire 32 ) Instruction_out [31:0] $end
$var wire 1 * Branch_out $end
$var wire 32 + ALU_result_out [31:0] $end
$var reg 1 , aclk $end
$var reg 7 - cycle_cnt [6:0] $end
$var reg 1 . reset $end
$var integer 32 / i [31:0] $end
$scope module my_MIPS_processor $end
$var wire 32 0 ALU_result_out [31:0] $end
$var wire 1 * Branch_out $end
$var wire 32 1 Instruction_out [31:0] $end
$var wire 1 ( MemWrite_out $end
$var wire 1 & RegWrite_out $end
$var wire 1 % Zero_out $end
$var wire 1 , clock $end
$var wire 32 2 read_data_1_out [31:0] $end
$var wire 32 3 read_data_2_out [31:0] $end
$var wire 1 . reset $end
$var wire 1 " stall_out $end
$var wire 32 4 write_data_out [31:0] $end
$var wire 32 5 write_data_WB [31:0] $end
$var wire 1 6 stall $end
$var wire 32 7 sign_extend [31:0] $end
$var wire 1 8 sig_RegWrite_WB $end
$var wire 1 9 sig_RegWrite_MEM $end
$var wire 1 : sig_RegWrite_EX $end
$var wire 32 ; read_data_2 [31:0] $end
$var wire 32 < read_data_1 [31:0] $end
$var wire 32 = read_data [31:0] $end
$var wire 32 > memory_write_data [31:0] $end
$var wire 6 ? function_opcode [5:0] $end
$var wire 5 @ dest_reg_R_type [4:0] $end
$var wire 5 A dest_reg_I_type [4:0] $end
$var wire 5 B dest_WB [4:0] $end
$var wire 5 C dest_MEM [4:0] $end
$var wire 5 D dest_EX [4:0] $end
$var wire 1 E branch_EX $end
$var wire 1 F Zero $end
$var wire 1 G Sw $end
$var wire 1 H RegWrite $end
$var wire 1 I RegDst $end
$var wire 1 J R_format $end
$var wire 10 K PC_plus_4_ID [9:0] $end
$var wire 10 L PC_plus_4 [9:0] $end
$var wire 10 M PC [9:0] $end
$var wire 1 N MemtoReg_MEM $end
$var wire 1 O MemtoReg_EX $end
$var wire 1 P MemtoReg $end
$var wire 1 Q MemWrite_EX $end
$var wire 1 R MemWrite $end
$var wire 1 S MemRead_EX $end
$var wire 1 T MemRead $end
$var wire 1 U Lw $end
$var wire 32 V Instruction [31:0] $end
$var wire 1 W I_format $end
$var wire 1 X Branch $end
$var wire 1 Y Beq $end
$var wire 8 Z Add_result [7:0] $end
$var wire 2 [ ALUop [1:0] $end
$var wire 32 \ ALU_result_MEM [31:0] $end
$var wire 32 ] ALU_result [31:0] $end
$var wire 1 ^ ALUSrc $end
$scope module my_CONTROL $end
$var wire 1 , clock $end
$var wire 1 Y op_Beq $end
$var wire 1 W op_I_format $end
$var wire 1 U op_Lw $end
$var wire 1 P op_MemtoReg $end
$var wire 1 J op_R_format $end
$var wire 1 G op_Sw $end
$var wire 1 T op_read_en $end
$var wire 1 . reset $end
$var wire 1 _ sig_ALU_src $end
$var wire 1 ` sig_MemtoReg $end
$var wire 1 a sig_RegDst $end
$var wire 1 b sig_RegWrite $end
$var wire 1 c sig_branch $end
$var wire 1 d sig_read_en $end
$var wire 1 e sig_write_en $end
$var wire 6 f sig_opcode [5:0] $end
$var wire 2 g sig_ALU_op [1:0] $end
$var wire 1 R op_write_en $end
$var wire 1 X op_branch $end
$var wire 1 H op_RegWrite $end
$var wire 1 I op_RegDst $end
$var wire 1 ^ op_ALU_src $end
$var wire 2 h op_ALU_op [1:0] $end
$var wire 32 i ip_instruction [31:0] $end
$var wire 1 j Sw $end
$var wire 1 k R_format $end
$var wire 1 l NOP $end
$var wire 1 m Lw $end
$var wire 1 n I_format $end
$var wire 1 o Beq $end
$var reg 2 p reg_ALU_op [1:0] $end
$var reg 1 ^ reg_ALU_src $end
$var reg 1 q reg_MemtoReg $end
$var reg 1 I reg_RegDst $end
$var reg 1 H reg_RegWrite $end
$var reg 1 X reg_branch $end
$var reg 1 r reg_read_en $end
$var reg 1 R reg_write_en $end
$upscope $end
$scope module my_DMEMORY $end
$var wire 1 , clock $end
$var wire 1 . reset $end
$var wire 32 s sig_data [31:0] $end
$var wire 5 t op_dest_reg [4:0] $end
$var wire 32 u op_data [31:0] $end
$var wire 1 9 op_RegWrite $end
$var wire 1 N op_MemtoReg $end
$var wire 32 v op_ALU_output [31:0] $end
$var wire 1 Q ip_write_en $end
$var wire 1 S ip_read_en $end
$var wire 5 w ip_dest_reg [4:0] $end
$var wire 32 x ip_data [31:0] $end
$var wire 1 : ip_RegWrite $end
$var wire 1 O ip_MemtoReg $end
$var wire 32 y ip_ALU_output [31:0] $end
$var wire 8 z data_RAM_addr [7:0] $end
$var reg 32 { reg_ALU_output [31:0] $end
$var reg 1 N reg_MemtoReg $end
$var reg 1 9 reg_RegWrite $end
$var reg 32 | reg_data [31:0] $end
$var reg 5 } reg_dest_reg [4:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$upscope $end
$scope module my_EXECUTE $end
$var wire 32 !" A_input [31:0] $end
$var wire 1 , clock $end
$var wire 2 "" ip_ALU_op [1:0] $end
$var wire 1 ^ ip_ALU_src $end
$var wire 1 P ip_MemtoReg $end
$var wire 1 I ip_RegDst $end
$var wire 1 H ip_RegWrite $end
$var wire 1 X ip_branch $end
$var wire 1 T ip_read_en $end
$var wire 1 R ip_write_en $end
$var wire 8 #" op_Add_result [7:0] $end
$var wire 1 O op_MemtoReg $end
$var wire 1 E op_branch $end
$var wire 32 $" op_memory_write_data [31:0] $end
$var wire 1 Q op_write_en $end
$var wire 1 . reset $end
$var wire 1 %" sig_zero $end
$var wire 5 &" sig_dest_reg [4:0] $end
$var wire 8 '" sig_Add_result [7:0] $end
$var wire 1 F op_zero $end
$var wire 1 S op_read_en $end
$var wire 5 (" op_dest_reg [4:0] $end
$var wire 1 : op_RegWrite $end
$var wire 32 )" op_ALU_result [31:0] $end
$var wire 32 *" ip_read_data_2 [31:0] $end
$var wire 32 +" ip_read_data_1 [31:0] $end
$var wire 32 ," ip_immediate [31:0] $end
$var wire 6 -" ip_function_opcode [5:0] $end
$var wire 5 ." ip_dest_reg_R_type [4:0] $end
$var wire 5 /" ip_dest_reg_I_type [4:0] $end
$var wire 10 0" ip_PC_plus_4 [9:0] $end
$var wire 32 1" B_input [31:0] $end
$var wire 3 2" ALU_ctl [2:0] $end
$var reg 32 3" reg_ALU_result [31:0] $end
$var reg 8 4" reg_Add_result [7:0] $end
$var reg 1 5" reg_MemtoReg $end
$var reg 1 : reg_RegWrite $end
$var reg 1 6" reg_branch $end
$var reg 5 7" reg_dest_reg [4:0] $end
$var reg 32 8" reg_memory_write_data [31:0] $end
$var reg 1 S reg_read_en $end
$var reg 1 9" reg_write_en $end
$var reg 1 F reg_zero $end
$var reg 32 :" sig_ALU_result [31:0] $end
$upscope $end
$scope module my_IDECODE $end
$var wire 1 , clock $end
$var wire 1 . reset $end
$var wire 6 ;" sig_function_opcode [5:0] $end
$var wire 5 <" sig_dest_reg_R_type [4:0] $end
$var wire 5 =" sig_dest_reg_I_type [4:0] $end
$var wire 5 >" read_register_2_address [4:0] $end
$var wire 5 ?" read_register_1_address [4:0] $end
$var wire 32 @" op_read_data_2 [31:0] $end
$var wire 32 A" op_read_data_1 [31:0] $end
$var wire 32 B" op_immediate [31:0] $end
$var wire 6 C" op_function_opcode [5:0] $end
$var wire 5 D" op_dest_reg_R_type [4:0] $end
$var wire 5 E" op_dest_reg_I_type [4:0] $end
$var wire 10 F" op_PC_plus_4 [9:0] $end
$var wire 5 G" ip_write_reg_addr [4:0] $end
$var wire 32 H" ip_write_data [31:0] $end
$var wire 1 6 ip_stall $end
$var wire 32 I" ip_instruction [31:0] $end
$var wire 1 8 ip_RegWrite $end
$var wire 10 J" ip_PC_plus_4 [9:0] $end
$var wire 32 K" Instruction_immediate_value [31:0] $end
$var reg 10 L" reg_PC_plus_4 [9:0] $end
$var reg 5 M" reg_dest_reg_I_type [4:0] $end
$var reg 5 N" reg_dest_reg_R_type [4:0] $end
$var reg 6 O" reg_function_opcode [5:0] $end
$var reg 32 P" reg_immediate [31:0] $end
$var reg 32 Q" reg_read_data_1 [31:0] $end
$var reg 32 R" reg_read_data_2 [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 S" i [31:0] $end
$upscope $end
$upscope $end
$scope module my_IFETCH $end
$var wire 1 , clock $end
$var wire 8 T" ip_add_result [7:0] $end
$var wire 1 E ip_branch $end
$var wire 1 F ip_zero $end
$var wire 10 U" op_PC [9:0] $end
$var wire 1 . reset $end
$var wire 32 V" op_instruction [31:0] $end
$var wire 10 W" op_PC_plus_4 [9:0] $end
$var wire 1 6 ip_stall $end
$var wire 6 X" instr_mem_addr [5:0] $end
$var reg 10 Y" Next_PC [9:0] $end
$var reg 10 Z" PC [9:0] $end
$var reg 10 [" reg_PC [9:0] $end
$var reg 32 \" reg_instruction [31:0] $end
$var reg 32 ]" sig_instruction [31:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 ^" i [31:0] $end
$upscope $end
$upscope $end
$scope module my_STALL_CONT $end
$var wire 1 _" RS_EX_hazard $end
$var wire 1 `" RS_MEM_hazard $end
$var wire 1 a" RS_WB_hazard $end
$var wire 1 b" RS_hazard $end
$var wire 1 c" RT_EX_hazard $end
$var wire 1 d" RT_MEM_hazard $end
$var wire 1 e" RT_WB_hazard $end
$var wire 1 f" RT_hazard $end
$var wire 1 Y ip_Beq $end
$var wire 1 W ip_I_format $end
$var wire 1 U ip_Lw $end
$var wire 1 J ip_R_format $end
$var wire 1 : ip_RegWrite_EX $end
$var wire 1 9 ip_RegWrite_MEM $end
$var wire 1 G ip_Sw $end
$var wire 5 g" ip_dest_EX [4:0] $end
$var wire 5 h" ip_dest_MEM [4:0] $end
$var wire 32 i" ip_instruction [31:0] $end
$var wire 1 6 op_stall $end
$var wire 1 j" use_RS $end
$var wire 1 k" use_RT $end
$var wire 6 l" sig_opcode [5:0] $end
$var wire 5 m" sig_RT [4:0] $end
$var wire 5 n" sig_RS [4:0] $end
$var wire 5 o" ip_dest_WB [4:0] $end
$var wire 1 8 ip_RegWrite_WB $end
$upscope $end
$scope module my_WRITE_BACK $end
$var wire 1 , clock $end
$var wire 32 p" ip_ALU_result [31:0] $end
$var wire 1 N ip_MemtoReg $end
$var wire 1 9 ip_RegWrite $end
$var wire 5 q" ip_dest_reg [4:0] $end
$var wire 32 r" ip_memory_data [31:0] $end
$var wire 1 8 op_RegWrite $end
$var wire 5 s" op_dest_reg [4:0] $end
$var wire 1 . reset $end
$var wire 32 t" op_write_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 u" \register_array[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 v" \register_array[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 w" \register_array[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 x" \register_array[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 y" \register_array[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 z" \register_array[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 {" \register_array[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 |" \register_array[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 }" \register_array[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 ~" \register_array[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 !# \register_array[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 "# \register_array[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 ## \register_array[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 $# \register_array[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 %# \register_array[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 &# \register_array[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 '# \register_array[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 (# \register_array[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 )# \register_array[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 *# \register_array[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 +# \register_array[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 ,# \register_array[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 -# \register_array[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 .# \register_array[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 /# \register_array[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 0# \register_array[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 1# \register_array[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 2# \register_array[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 3# \register_array[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 4# \register_array[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 5# \register_array[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IDECODE $end
$var reg 32 6# \register_array[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 7# \instr_RAM[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 8# \instr_RAM[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 9# \instr_RAM[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 :# \instr_RAM[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 ;# \instr_RAM[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 <# \instr_RAM[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 =# \instr_RAM[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 ># \instr_RAM[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 ?# \instr_RAM[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 @# \instr_RAM[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 A# \instr_RAM[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 B# \instr_RAM[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 C# \instr_RAM[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 D# \instr_RAM[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 E# \instr_RAM[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 F# \instr_RAM[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 G# \instr_RAM[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 H# \instr_RAM[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 I# \instr_RAM[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 J# \instr_RAM[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 K# \instr_RAM[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 L# \instr_RAM[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 M# \instr_RAM[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 N# \instr_RAM[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 O# \instr_RAM[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 P# \instr_RAM[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 Q# \instr_RAM[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 R# \instr_RAM[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 S# \instr_RAM[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 T# \instr_RAM[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 U# \instr_RAM[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_IFETCH $end
$var reg 32 V# \instr_RAM[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 W# \data_RAM[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 X# \data_RAM[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 Y# \data_RAM[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 Z# \data_RAM[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 [# \data_RAM[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 \# \data_RAM[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 ]# \data_RAM[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 ^# \data_RAM[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 _# \data_RAM[8] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 `# \data_RAM[9] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 a# \data_RAM[10] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 b# \data_RAM[11] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 c# \data_RAM[12] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 d# \data_RAM[13] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 e# \data_RAM[14] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 f# \data_RAM[15] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 g# \data_RAM[16] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 h# \data_RAM[17] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 i# \data_RAM[18] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 j# \data_RAM[19] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 k# \data_RAM[20] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 l# \data_RAM[21] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 m# \data_RAM[22] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 n# \data_RAM[23] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 o# \data_RAM[24] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 p# \data_RAM[25] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 q# \data_RAM[26] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 r# \data_RAM[27] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 s# \data_RAM[28] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 t# \data_RAM[29] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 u# \data_RAM[30] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module MIPS_pipelined_tb $end
$scope module my_MIPS_processor $end
$scope module my_DMEMORY $end
$var reg 8 v# \data_RAM[31] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b0 p#
b0 o#
b0 n#
b0 m#
b0 l#
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
b0 e#
b0 d#
b0 c#
b0 b#
b0 a#
b0 `#
b0 _#
b10101010 ^#
b10101010 ]#
b10101010 \#
b10101010 [#
b1010101 Z#
b1010101 Y#
b1010101 X#
b1010101 W#
b0 V#
b0 U#
b0 T#
b0 S#
b0 R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
b10000001000011111111111111010 ?#
b10000001000101111111111111111 >#
b10101100000000010000000000000100 =#
b10000110000100000100000 <#
b10001100000000110000000000000100 ;#
b10001100000000100000000000000000 :#
b0 9#
b0 8#
b0 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
xk"
xj"
bx i"
bx h"
bx g"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
b1000000 ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
b0 S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
x9"
bx 8"
bx 7"
x6"
x5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
x%"
bx $"
bx #"
bx ""
bx !"
b100000000 ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
xr
xq
bx p
xo
xn
xm
xl
xk
xj
bx i
bx h
bx g
bx f
xe
xd
xc
xb
xa
x`
x_
x^
bx ]
bx \
bx [
bx Z
xY
xX
xW
bx V
xU
xT
xS
xR
xQ
xP
xO
xN
bx M
bx L
bx K
xJ
xI
xH
xG
xF
xE
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
x:
x9
x8
bx 7
x6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
b100000 /
1.
b0 -
1,
bx +
x*
bx )
x(
bx '
x&
x%
bx $
bx #
x"
bx !
$end
#1000
0,
#2000
b1 X"
b100 Y"
1j"
1k"
0W
0n
0_
1J
1k
0U
0d
0`
0m
0G
0e
0j
0Y
b10 g
0c
0o
b0 <"
0b
0a
b0 l"
b0 n"
b0 m"
b0 ;"
b0 K"
b0 ="
b0 >"
b0 ?"
b0 f
b0 s
0_"
0c"
b0 z
b11111 6#
b11110 5#
b11101 4#
b11100 3#
b11011 2#
b11010 1#
b11001 0#
b11000 /#
b10111 .#
b10110 -#
b10101 ,#
b10100 +#
b10011 *#
b10010 )#
b10001 (#
b10000 '#
b1111 &#
b1110 %#
b1101 $#
b1100 ##
b1011 "#
b1010 !#
b1001 ~"
b1000 }"
b111 |"
b110 {"
b101 z"
b100 y"
b11 x"
b10 w"
b1 v"
b0 u"
b0 Z"
b100 L
b100 J"
b100 W"
b0 '
b0 M
b0 U"
b0 ["
1l
b0 )
b0 1
b0 V
b0 i
b0 I"
b0 V"
b0 \"
b0 i"
0E
06"
0Q
09"
0S
0:
0O
05"
0%
0F
b0 D
b0 w
b0 ("
b0 7"
b0 g"
b0 >
b0 x
b0 $"
b0 8"
b0 Z
b0 #"
b0 T"
b0 4"
b0 +
b0 0
b0 ]
b0 y
b0 )"
b0 3"
b100000 S"
1,
#3000
0,
#4000
0"
06
0b"
0f"
b100 '"
b10 2"
0`"
0d"
0e"
0a"
b0 !
b0 4
b0 5
b0 H"
b0 t"
1%"
b0 :"
b0 1"
b0 &"
b11111 6#
b11110 5#
b11101 4#
b11100 3#
b11011 2#
b11010 1#
b11001 0#
b11000 /#
b10111 .#
b10110 -#
b10101 ,#
b10100 +#
b10011 *#
b10010 )#
b10001 (#
b10000 '#
b1111 &#
b1110 %#
b1101 $#
b1100 ##
b1011 "#
b1010 !#
b1001 ~"
b1000 }"
b111 |"
b110 {"
b101 z"
b100 y"
b11 x"
b10 w"
b1 v"
b0 u"
08
09
0N
b0 B
b0 G"
b0 o"
b0 s"
b0 C
b0 t
b0 }
b0 h"
b0 q"
b0 \
b0 v
b0 {
b0 p"
b0 =
b0 u
b0 |
b0 r"
b0 A
b0 /"
b0 E"
b0 M"
b0 @
b0 ."
b0 D"
b0 N"
b0 7
b0 ,"
b0 B"
b0 P"
b0 #
b0 3
b0 ;
b0 *"
b0 @"
b0 R"
b0 !"
b0 $
b0 2
b0 <
b0 +"
b0 A"
b0 Q"
b100 K
b100 0"
b100 F"
b100 L"
b0 ?
b0 -"
b0 C"
b0 O"
b0 ]"
b10 [
b10 h
b10 p
b10 ""
0^
0*
0X
0(
0R
0T
0r
0&
0H
0P
0q
0I
b100000 S"
1,
#5000
0,
0.
#6000
b10 X"
b1000 Y"
b100 Z"
1%
1F
b100 Z
b100 #"
b100 T"
b100 4"
b1 -
1,
#7000
0,
#8000
b11 X"
b1100 Y"
b10 -
b1000 L
b1000 J"
b1000 W"
b100 '
b100 M
b100 U"
b100 ["
b1000 Z"
1,
#9000
0,
#10000
b100 X"
b10000 Y"
b1000 '"
b10001100000000100000000000000000 ]"
b1100 Z"
b1100 L
b1100 J"
b1100 W"
b1000 '
b1000 M
b1000 U"
b1000 ["
b1000 K
b1000 0"
b1000 F"
b1000 L"
b11 -
1,
#11000
0,
#12000
b101 X"
b10100 Y"
0k"
1_
0J
b0 g
0k
1U
1d
1`
1m
1b
0a
b1100 '"
b100011 l"
b10 m"
b10 ="
b10 >"
b100011 f
b100 -
b1000 Z
b1000 #"
b1000 T"
b1000 4"
b1100 K
b1100 0"
b1100 F"
b1100 L"
b10000 L
b10000 J"
b10000 W"
b1100 '
b1100 M
b1100 U"
b1100 ["
0l
b10001100000000100000000000000000 )
b10001100000000100000000000000000 1
b10001100000000100000000000000000 V
b10001100000000100000000000000000 i
b10001100000000100000000000000000 I"
b10001100000000100000000000000000 V"
b10001100000000100000000000000000 \"
b10001100000000100000000000000000 i"
b10000 Z"
b10001100000000110000000000000100 ]"
1,
#13000
0,
#14000
b110 X"
b11000 Y"
b11 m"
b100 ;"
b100 K"
b11 ="
b11 >"
b10 &"
b10000 '"
b0 [
b0 h
b0 p
b0 ""
1^
1T
1r
1&
1H
1P
1q
b10000110000100000100000 ]"
b10100 Z"
b10100 L
b10100 J"
b10100 W"
b10000 '
b10000 M
b10000 U"
b10000 ["
b10001100000000110000000000000100 )
b10001100000000110000000000000100 1
b10001100000000110000000000000100 V
b10001100000000110000000000000100 i
b10001100000000110000000000000100 I"
b10001100000000110000000000000100 V"
b10001100000000110000000000000100 \"
b10001100000000110000000000000100 i"
b10 A
b10 /"
b10 E"
b10 M"
b10 #
b10 3
b10 ;
b10 *"
b10 @"
b10 R"
b10000 K
b10000 0"
b10000 F"
b10000 L"
b1100 Z
b1100 #"
b1100 T"
b1100 4"
b101 -
1,
#15000
0,
#16000
b11000 Y"
1j"
1k"
1"
16
1a
0_
1b"
1J
b10 g
1k
0U
0d
0`
0m
0%"
b100 :"
b0 <"
b1010101010101010101010101010101 s
1_"
b11 &"
b100 1"
b100100 '"
b0 l"
b10 n"
b100000 ;"
b100000100000 K"
b10 ?"
b0 f
b110 -
1S
1:
1O
15"
b10 D
b10 w
b10 ("
b10 7"
b10 g"
b10 >
b10 x
b10 $"
b10 8"
b10000 Z
b10000 #"
b10000 T"
b10000 4"
b11 A
b11 /"
b11 E"
b11 M"
b100 7
b100 ,"
b100 B"
b100 P"
b11 #
b11 3
b11 ;
b11 *"
b11 @"
b11 R"
b10100 K
b10100 0"
b10100 F"
b10100 L"
b100 ?
b100 -"
b100 C"
b100 O"
b11000 L
b11000 J"
b11000 W"
b10100 '
b10100 M
b10100 U"
b10100 ["
b10000110000100000100000 )
b10000110000100000100000 1
b10000110000100000100000 V
b10000110000100000100000 i
b10000110000100000100000 I"
b10000110000100000100000 V"
b10000110000100000100000 \"
b10000110000100000100000 i"
b11000 Z"
b10101100000000010000000000000100 ]"
1,
#17000
0,
#18000
1f"
0_"
1c"
b10101010101010101010101010101010 s
b0 &"
b11 1"
b101 :"
b10011000 '"
b100 z
1`"
1a"
b1010101010101010101010101010101 !
b1010101010101010101010101010101 4
b1010101010101010101010101010101 5
b1010101010101010101010101010101 H"
b1010101010101010101010101010101 t"
b10 [
b10 h
b10 p
b10 ""
0^
0T
0r
0P
0q
1I
b100000100000 7
b100000100000 ,"
b100000100000 B"
b100000100000 P"
b10 !"
b10 $
b10 2
b10 <
b10 +"
b10 A"
b10 Q"
b11000 K
b11000 0"
b11000 F"
b11000 L"
b100000 ?
b100000 -"
b100000 C"
b100000 O"
0%
0F
b11 D
b11 w
b11 ("
b11 7"
b11 g"
b11 >
b11 x
b11 $"
b11 8"
b100100 Z
b100100 #"
b100100 T"
b100100 4"
b100 +
b100 0
b100 ]
b100 y
b100 )"
b100 3"
18
19
1N
b10 B
b10 G"
b10 o"
b10 s"
b10 C
b10 t
b10 }
b10 h"
b10 q"
b1010101010101010101010101010101 =
b1010101010101010101010101010101 u
b1010101010101010101010101010101 |
b1010101010101010101010101010101 r"
b111 -
1,
#19000
0,
#20000
0b"
0`"
1d"
1e"
0a"
0c"
b10101010101010101010101010101010 !
b10101010101010101010101010101010 4
b10101010101010101010101010101010 5
b10101010101010101010101010101010 H"
b10101010101010101010101010101010 t"
b0 s
b101 z
b1010101010101010101010101010101 w"
b1000 -
b11 B
b11 G"
b11 o"
b11 s"
b11 C
b11 t
b11 }
b11 h"
b11 q"
b100 \
b100 v
b100 {
b100 p"
b10101010101010101010101010101010 =
b10101010101010101010101010101010 u
b10101010101010101010101010101010 |
b10101010101010101010101010101010 r"
0S
0O
05"
b0 D
b0 w
b0 ("
b0 7"
b0 g"
b10011000 Z
b10011000 #"
b10011000 T"
b10011000 4"
b101 +
b101 0
b101 ]
b101 y
b101 )"
b101 3"
1,
#21000
0,
#22000
b111 X"
b11100 Y"
b1 <"
0"
06
0f"
0d"
0e"
b1010101010101010101010101011000 :"
b101 !
b101 4
b101 5
b101 H"
b101 t"
b1010101010101010101010101010101 !"
b1010101010101010101010101010101 $
b1010101010101010101010101010101 2
b1010101010101010101010101010101 <
b1010101010101010101010101010101 +"
b1010101010101010101010101010101 A"
b1010101010101010101010101010101 Q"
0N
b0 B
b0 G"
b0 o"
b0 s"
b0 C
b0 t
b0 }
b0 h"
b0 q"
b101 \
b101 v
b101 {
b101 p"
b0 =
b0 u
b0 |
b0 r"
b1001 -
b10101010101010101010101010101010 x"
1,
#23000
0,
#24000
b11100 Y"
1"
16
0b
1b"
0a
1_
1_"
1`"
1a"
0J
b0 g
0k
1G
1e
1j
b11111111111111111111111111111111 :"
b0 <"
b1011000 z
b1 &"
b10101010101010101010101010101010 1"
b101011 l"
b0 n"
b1 m"
b100 ;"
b100 K"
b1 ="
b1 >"
b0 ?"
b101011 f
b1010 -
b1010101010101010101010101011000 +
b1010101010101010101010101011000 0
b1010101010101010101010101011000 ]
b1010101010101010101010101011000 y
b1010101010101010101010101011000 )"
b1010101010101010101010101011000 3"
b1 @
b1 ."
b1 D"
b1 N"
b10101010101010101010101010101010 #
b10101010101010101010101010101010 3
b10101010101010101010101010101010 ;
b10101010101010101010101010101010 *"
b10101010101010101010101010101010 @"
b10101010101010101010101010101010 R"
b11100 L
b11100 J"
b11100 W"
b11000 '
b11000 M
b11000 U"
b11000 ["
b10101100000000010000000000000100 )
b10101100000000010000000000000100 1
b10101100000000010000000000000100 V
b10101100000000010000000000000100 i
b10101100000000010000000000000100 I"
b10101100000000010000000000000100 V"
b10101100000000010000000000000100 \"
b10101100000000010000000000000100 i"
b11100 Z"
b10000001000101111111111111111 ]"
1,
#25000
0,
#26000
1f"
0_"
1c"
b100 1"
b100 :"
b101100 '"
b11111111 z
b1010101010101010101010101011000 !
b1010101010101010101010101011000 4
b1010101010101010101010101011000 5
b1010101010101010101010101011000 H"
b1010101010101010101010101011000 t"
b0 [
b0 h
b0 p
b0 ""
1^
1(
1R
0&
0H
0I
b1 A
b1 /"
b1 E"
b1 M"
b0 @
b0 ."
b0 D"
b0 N"
b100 7
b100 ,"
b100 B"
b100 P"
b1 #
b1 3
b1 ;
b1 *"
b1 @"
b1 R"
b0 !"
b0 $
b0 2
b0 <
b0 +"
b0 A"
b0 Q"
b11100 K
b11100 0"
b11100 F"
b11100 L"
b100 ?
b100 -"
b100 C"
b100 O"
b1 D
b1 w
b1 ("
b1 7"
b1 g"
b10101010101010101010101010101010 >
b10101010101010101010101010101010 x
b10101010101010101010101010101010 $"
b10101010101010101010101010101010 8"
b11111111111111111111111111111111 +
b11111111111111111111111111111111 0
b11111111111111111111111111111111 ]
b11111111111111111111111111111111 y
b11111111111111111111111111111111 )"
b11111111111111111111111111111111 3"
b1010101010101010101010101011000 \
b1010101010101010101010101011000 v
b1010101010101010101010101011000 {
b1010101010101010101010101011000 p"
b1011 -
1,
#27000
0,
#28000
0b"
0`"
1d"
1e"
0a"
b11111111111111111111111111111111 !
b11111111111111111111111111111111 4
b11111111111111111111111111111111 5
b11111111111111111111111111111111 H"
b11111111111111111111111111111111 t"
0c"
b100 z
b1100 -
b1 B
b1 G"
b1 o"
b1 s"
b1 C
b1 t
b1 }
b1 h"
b1 q"
b11111111111111111111111111111111 \
b11111111111111111111111111111111 v
b11111111111111111111111111111111 {
b11111111111111111111111111111111 p"
1Q
19"
0:
b1 >
b1 x
b1 $"
b1 8"
b101100 Z
b101100 #"
b101100 T"
b101100 4"
b100 +
b100 0
b100 ]
b100 y
b100 )"
b100 3"
1,
#29000
0,
#30000
b1000 X"
b100000 Y"
0"
06
0f"
0d"
0e"
b100 !
b100 4
b100 5
b100 H"
b100 t"
b0 ^#
b0 ]#
b0 \#
b1 [#
08
09
b100 \
b100 v
b100 {
b100 p"
b1101 -
b11111111111111111111111111111111 v"
1,
#31000
0,
#32000
b1001 X"
b100100 Y"
0_
0G
0e
0j
1Y
b1 g
1c
1o
b11111 <"
b100 l"
b1 n"
b10 m"
b111111 ;"
b11111111111111111111111111111111 K"
b10 ="
b10 >"
b1 ?"
b100 f
b1110 -
b0 ^#
b0 ]#
b0 \#
b1 [#
b11111111111111111111111111111111 #
b11111111111111111111111111111111 3
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 *"
b11111111111111111111111111111111 @"
b11111111111111111111111111111111 R"
b100000 L
b100000 J"
b100000 W"
b11100 '
b11100 M
b11100 U"
b11100 ["
b10000001000101111111111111111 )
b10000001000101111111111111111 1
b10000001000101111111111111111 V
b10000001000101111111111111111 i
b10000001000101111111111111111 I"
b10000001000101111111111111111 V"
b10000001000101111111111111111 \"
b10000001000101111111111111111 i"
b100000 Z"
b10000001000011111111111111010 ]"
1,
#33000
0,
#34000
b1010 X"
b101000 Y"
b110 2"
b1 m"
b111010 ;"
b11111111111111111111111111111010 K"
b1 ="
b1 >"
b10 &"
b1010101010101010101010101010101 1"
b10101010101010101010101010101010 :"
b11100 '"
b1 [
b1 h
b1 p
b1 ""
0^
1*
1X
0(
0R
b0 ]"
b100100 Z"
b100100 L
b100100 J"
b100100 W"
b100000 '
b100000 M
b100000 U"
b100000 ["
b10000001000011111111111111010 )
b10000001000011111111111111010 1
b10000001000011111111111111010 V
b10000001000011111111111111010 i
b10000001000011111111111111010 I"
b10000001000011111111111111010 V"
b10000001000011111111111111010 \"
b10000001000011111111111111010 i"
b10 A
b10 /"
b10 E"
b10 M"
b11111 @
b11111 ."
b11111 D"
b11111 N"
b11111111111111111111111111111111 7
b11111111111111111111111111111111 ,"
b11111111111111111111111111111111 B"
b11111111111111111111111111111111 P"
b1010101010101010101010101010101 #
b1010101010101010101010101010101 3
b1010101010101010101010101010101 ;
b1010101010101010101010101010101 *"
b1010101010101010101010101010101 @"
b1010101010101010101010101010101 R"
b11111111111111111111111111111111 !"
b11111111111111111111111111111111 $
b11111111111111111111111111111111 2
b11111111111111111111111111111111 <
b11111111111111111111111111111111 +"
b11111111111111111111111111111111 A"
b11111111111111111111111111111111 Q"
b100000 K
b100000 0"
b100000 F"
b100000 L"
b111111 ?
b111111 -"
b111111 C"
b111111 O"
b11111111111111111111111111111111 >
b11111111111111111111111111111111 x
b11111111111111111111111111111111 $"
b11111111111111111111111111111111 8"
b0 ^#
b0 ]#
b0 \#
b1 [#
b1111 -
1,
#35000
0,
#36000
b1011 X"
b101100 Y"
1j"
1k"
1J
1k
0Y
b10 g
0c
0o
1%"
b0 :"
b0 <"
b10101010 z
b1 &"
b11111111111111111111111111111111 1"
b1100 '"
b0 l"
b0 n"
b0 m"
b0 ;"
b0 K"
b0 ="
b0 >"
b0 ?"
b0 f
b10000 -
b11111111 ^#
b11111111 ]#
b11111111 \#
b11111111 [#
1E
16"
0Q
09"
b10 D
b10 w
b10 ("
b10 7"
b10 g"
b1010101010101010101010101010101 >
b1010101010101010101010101010101 x
b1010101010101010101010101010101 $"
b1010101010101010101010101010101 8"
b11100 Z
b11100 #"
b11100 T"
b11100 4"
b10101010101010101010101010101010 +
b10101010101010101010101010101010 0
b10101010101010101010101010101010 ]
b10101010101010101010101010101010 y
b10101010101010101010101010101010 )"
b10101010101010101010101010101010 3"
b1 A
b1 /"
b1 E"
b1 M"
b11111111111111111111111111111010 7
b11111111111111111111111111111010 ,"
b11111111111111111111111111111010 B"
b11111111111111111111111111111010 P"
b11111111111111111111111111111111 #
b11111111111111111111111111111111 3
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 *"
b11111111111111111111111111111111 @"
b11111111111111111111111111111111 R"
b100100 K
b100100 0"
b100100 F"
b100100 L"
b111010 ?
b111010 -"
b111010 C"
b111010 O"
b101000 L
b101000 J"
b101000 W"
b100100 '
b100100 M
b100100 U"
b100100 ["
1l
b0 )
b0 1
b0 V
b0 i
b0 I"
b0 V"
b0 \"
b0 i"
b101000 Z"
1,
#37000
0,
#38000
b11 X"
b1100 Y"
b10 2"
b0 &"
b0 1"
1%"
b0 :"
b101000 '"
b0 z
b10101010101010101010101010101010 !
b10101010101010101010101010101010 4
b10101010101010101010101010101010 5
b10101010101010101010101010101010 H"
b10101010101010101010101010101010 t"
b10 [
b10 h
b10 p
b10 ""
0*
0X
b101100 Z"
b101100 L
b101100 J"
b101100 W"
b101000 '
b101000 M
b101000 U"
b101000 ["
b0 A
b0 /"
b0 E"
b0 M"
b0 @
b0 ."
b0 D"
b0 N"
b0 7
b0 ,"
b0 B"
b0 P"
b0 #
b0 3
b0 ;
b0 *"
b0 @"
b0 R"
b0 !"
b0 $
b0 2
b0 <
b0 +"
b0 A"
b0 Q"
b101000 K
b101000 0"
b101000 F"
b101000 L"
b0 ?
b0 -"
b0 C"
b0 O"
1%
1F
b1 D
b1 w
b1 ("
b1 7"
b1 g"
b11111111111111111111111111111111 >
b11111111111111111111111111111111 x
b11111111111111111111111111111111 $"
b11111111111111111111111111111111 8"
b1100 Z
b1100 #"
b1100 T"
b1100 4"
b0 +
b0 0
b0 ]
b0 y
b0 )"
b0 3"
b10 B
b10 G"
b10 o"
b10 s"
b10 C
b10 t
b10 }
b10 h"
b10 q"
b10101010101010101010101010101010 \
b10101010101010101010101010101010 v
b10101010101010101010101010101010 {
b10101010101010101010101010101010 p"
b10001 -
1,
#39000
0,
#40000
b100 X"
b10000 Y"
b0 !
b0 4
b0 5
b0 H"
b0 t"
b101100 '"
b10010 -
b1 B
b1 G"
b1 o"
b1 s"
b1 C
b1 t
b1 }
b1 h"
b1 q"
b0 \
b0 v
b0 {
b0 p"
0E
06"
b0 D
b0 w
b0 ("
b0 7"
b0 g"
b0 >
b0 x
b0 $"
b0 8"
b101000 Z
b101000 #"
b101000 T"
b101000 4"
b101100 K
b101100 0"
b101100 F"
b101100 L"
b110000 L
b110000 J"
b110000 W"
b101100 '
b101100 M
b101100 U"
b101100 ["
b1100 Z"
b10001100000000100000000000000000 ]"
1,
#41000
0,
#42000
b101 X"
b10100 Y"
0k"
1_
0J
b0 g
0k
1U
1d
1`
1m
1b
0a
b100011 l"
b10 m"
b10 ="
b10 >"
b100011 f
b110000 '"
b10001100000000110000000000000100 ]"
b10000 Z"
b10000 L
b10000 J"
b10000 W"
b1100 '
b1100 M
b1100 U"
b1100 ["
0l
b10001100000000100000000000000000 )
b10001100000000100000000000000000 1
b10001100000000100000000000000000 V
b10001100000000100000000000000000 i
b10001100000000100000000000000000 I"
b10001100000000100000000000000000 V"
b10001100000000100000000000000000 \"
b10001100000000100000000000000000 i"
b110000 K
b110000 0"
b110000 F"
b110000 L"
b101100 Z
b101100 #"
b101100 T"
b101100 4"
b0 B
b0 G"
b0 o"
b0 s"
b0 C
b0 t
b0 }
b0 h"
b0 q"
b10011 -
1,
#43000
0,
#44000
b110 X"
b11000 Y"
b10 &"
b10000 '"
b11 m"
b100 ;"
b100 K"
b11 ="
b11 >"
b10100 -
b110000 Z
b110000 #"
b110000 T"
b110000 4"
b10 A
b10 /"
b10 E"
b10 M"
b1010101010101010101010101010101 #
b1010101010101010101010101010101 3
b1010101010101010101010101010101 ;
b1010101010101010101010101010101 *"
b1010101010101010101010101010101 @"
b1010101010101010101010101010101 R"
b10000 K
b10000 0"
b10000 F"
b10000 L"
b10100 L
b10100 J"
b10100 W"
b10000 '
b10000 M
b10000 U"
b10000 ["
b10001100000000110000000000000100 )
b10001100000000110000000000000100 1
b10001100000000110000000000000100 V
b10001100000000110000000000000100 i
b10001100000000110000000000000100 I"
b10001100000000110000000000000100 V"
b10001100000000110000000000000100 \"
b10001100000000110000000000000100 i"
b10100 Z"
b10000110000100000100000 ]"
b0 [
b0 h
b0 p
b0 ""
1^
1T
1r
1&
1H
1P
1q
1,
#45000
0,
#46000
b11000 Y"
1"
16
1j"
1b"
1k"
1a
0_
1_"
1J
b10 g
1k
0U
0d
0`
0m
b0 <"
0%"
b100 :"
b0 l"
b10 n"
b100000 ;"
b100000100000 K"
b10 ?"
b0 f
b11 &"
b100 1"
b100100 '"
b1010101010101010101010101010101 s
b10101100000000010000000000000100 ]"
b11000 Z"
b11000 L
b11000 J"
b11000 W"
b10100 '
b10100 M
b10100 U"
b10100 ["
b10000110000100000100000 )
b10000110000100000100000 1
b10000110000100000100000 V
b10000110000100000100000 i
b10000110000100000100000 I"
b10000110000100000100000 V"
b10000110000100000100000 \"
b10000110000100000100000 i"
b11 A
b11 /"
b11 E"
b11 M"
b100 7
b100 ,"
b100 B"
b100 P"
b10101010101010101010101010101010 #
b10101010101010101010101010101010 3
b10101010101010101010101010101010 ;
b10101010101010101010101010101010 *"
b10101010101010101010101010101010 @"
b10101010101010101010101010101010 R"
b10100 K
b10100 0"
b10100 F"
b10100 L"
b100 ?
b100 -"
b100 C"
b100 O"
1S
1:
1O
15"
b10 D
b10 w
b10 ("
b10 7"
b10 g"
b1010101010101010101010101010101 >
b1010101010101010101010101010101 x
b1010101010101010101010101010101 $"
b1010101010101010101010101010101 8"
b10000 Z
b10000 #"
b10000 T"
b10000 4"
b10101 -
1,
#47000
0,
#48000
1f"
0_"
1c"
b11111111111111111111111111111111 s
1`"
1a"
b1010101010101010101010101010101 !
b1010101010101010101010101010101 4
b1010101010101010101010101010101 5
b1010101010101010101010101010101 H"
b1010101010101010101010101010101 t"
b100 z
b11111111111111111111111111111111 :"
b10011000 '"
b10101010101010101010101010101010 1"
b0 &"
b10110 -
18
19
1N
b10 B
b10 G"
b10 o"
b10 s"
b10 C
b10 t
b10 }
b10 h"
b10 q"
b1010101010101010101010101010101 =
b1010101010101010101010101010101 u
b1010101010101010101010101010101 |
b1010101010101010101010101010101 r"
0%
0F
b11 D
b11 w
b11 ("
b11 7"
b11 g"
b10101010101010101010101010101010 >
b10101010101010101010101010101010 x
b10101010101010101010101010101010 $"
b10101010101010101010101010101010 8"
b100100 Z
b100100 #"
b100100 T"
b100100 4"
b100 +
b100 0
b100 ]
b100 y
b100 )"
b100 3"
b100000100000 7
b100000100000 ,"
b100000100000 B"
b100000100000 P"
b1010101010101010101010101010101 !"
b1010101010101010101010101010101 $
b1010101010101010101010101010101 2
b1010101010101010101010101010101 <
b1010101010101010101010101010101 +"
b1010101010101010101010101010101 A"
b1010101010101010101010101010101 Q"
b11000 K
b11000 0"
b11000 F"
b11000 L"
b100000 ?
b100000 -"
b100000 C"
b100000 O"
b10 [
b10 h
b10 p
b10 ""
0^
0T
0r
0P
0q
1I
1,
#49000
0,
#50000
0b"
0c"
0`"
1d"
1e"
0a"
b0 s
b11111111 z
b11111111111111111111111111111111 !
b11111111111111111111111111111111 4
b11111111111111111111111111111111 5
b11111111111111111111111111111111 H"
b11111111111111111111111111111111 t"
0S
0O
05"
b0 D
b0 w
b0 ("
b0 7"
b0 g"
b10011000 Z
b10011000 #"
b10011000 T"
b10011000 4"
b11111111111111111111111111111111 +
b11111111111111111111111111111111 0
b11111111111111111111111111111111 ]
b11111111111111111111111111111111 y
b11111111111111111111111111111111 )"
b11111111111111111111111111111111 3"
b11 B
b11 G"
b11 o"
b11 s"
b11 C
b11 t
b11 }
b11 h"
b11 q"
b100 \
b100 v
b100 {
b100 p"
b11111111111111111111111111111111 =
b11111111111111111111111111111111 u
b11111111111111111111111111111111 |
b11111111111111111111111111111111 r"
b10111 -
b1010101010101010101010101010101 w"
1,
#51000
0,
#52000
b111 X"
b11100 Y"
b1 <"
0"
06
0f"
0d"
0e"
b11111111111111111111111111111111 x"
b11000 -
0N
b0 B
b0 G"
b0 o"
b0 s"
b0 C
b0 t
b0 }
b0 h"
b0 q"
b11111111111111111111111111111111 \
b11111111111111111111111111111111 v
b11111111111111111111111111111111 {
b11111111111111111111111111111111 p"
b0 =
b0 u
b0 |
b0 r"
1,
#53000
0,
#54000
b11100 Y"
1"
16
0b
1b"
0a
1_
1_"
1`"
1a"
0J
b0 g
0k
1G
1e
1j
b0 <"
b1010101010101010101010101010100 :"
b101011 l"
b0 n"
b1 m"
b100 ;"
b100 K"
b1 ="
b1 >"
b0 ?"
b101011 f
b1 &"
b11111111111111111111111111111111 1"
b10000001000101111111111111111 ]"
b11100 Z"
b11100 L
b11100 J"
b11100 W"
b11000 '
b11000 M
b11000 U"
b11000 ["
b10101100000000010000000000000100 )
b10101100000000010000000000000100 1
b10101100000000010000000000000100 V
b10101100000000010000000000000100 i
b10101100000000010000000000000100 I"
b10101100000000010000000000000100 V"
b10101100000000010000000000000100 \"
b10101100000000010000000000000100 i"
b1 @
b1 ."
b1 D"
b1 N"
b11111111111111111111111111111111 #
b11111111111111111111111111111111 3
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 *"
b11111111111111111111111111111111 @"
b11111111111111111111111111111111 R"
b11001 -
1,
#55000
0,
